// THIS FILE IS AUTOGENERATED FROM base/tests/rpc/rpct.proto

#include "base/tests/rpc/rpct.proxy.pb.h"

#include "base/rpc/outbound_call.h"
#include "base/net/sockaddr.h"

namespace base {
namespace rpct {

CalculatorServiceProxy::CalculatorServiceProxy(
   const std::shared_ptr< ::base::rpc::Messenger> &messenger,
   const ::base::Sockaddr &remote)
  : Proxy(messenger, remote, "base.rpct.CalculatorService") {
}

CalculatorServiceProxy::~CalculatorServiceProxy() {
}


::base::Status CalculatorServiceProxy::Add(const AddRequestPB &req, AddResponsePB *resp,
                                     ::base::rpc::RpcController *controller) {
  return SyncRequest("Add", req, resp, controller);
}

void CalculatorServiceProxy::AddAsync(const AddRequestPB &req,
                     AddResponsePB *resp, ::base::rpc::RpcController *controller,
                     const ::base::rpc::ResponseCallback &callback) {
  AsyncRequest("Add", req, resp, controller, callback);
}

} // namespace rpct
} // namespace base
