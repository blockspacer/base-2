// THIS FILE IS AUTOGENERATED FROM base/tests/rpc/echo.proto

#include "base/tests/rpc/echo.proxy.pb.h"

#include "base/rpc/outbound_call.h"
#include "base/net/sockaddr.h"

namespace base {
namespace echo_service {

EchoServiceProxy::EchoServiceProxy(
   const std::shared_ptr< ::base::rpc::Messenger> &messenger,
   const ::base::Sockaddr &remote)
  : Proxy(messenger, remote, "base.echo_service.EchoService") {
}

EchoServiceProxy::~EchoServiceProxy() {
}


::base::Status EchoServiceProxy::Echo(const EchoRequestPB &req, EchoResponsePB *resp,
                                     ::base::rpc::RpcController *controller) {
  return SyncRequest("Echo", req, resp, controller);
}

void EchoServiceProxy::EchoAsync(const EchoRequestPB &req,
                     EchoResponsePB *resp, ::base::rpc::RpcController *controller,
                     const ::base::rpc::ResponseCallback &callback) {
  AsyncRequest("Echo", req, resp, controller, callback);
}

} // namespace echo_service
} // namespace base
