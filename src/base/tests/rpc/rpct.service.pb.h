// THIS FILE IS AUTOGENERATED FROM base/tests/rpc/rpct.proto

#ifndef BASE_RPC_RPCT_SERVICE_IF_DOT_H
#define BASE_RPC_RPCT_SERVICE_IF_DOT_H

#include "base/tests/rpc/rpct.pb.h"

#include <functional>
#include <memory>
#include <string>

#include "base/rpc/rpc_header.pb.h"
#include "base/rpc/service_if.h"

namespace base {
class MetricEntity;
namespace rpc {
class Messenger;
class ResultTracker;
class RpcContext;
} // namespace rpc
} // namespace base

namespace base {
namespace rpct {

class CalculatorServiceIf : public ::base::rpc::GeneratedServiceIf {
 public:
  explicit CalculatorServiceIf(const scoped_refptr<::base::MetricEntity>& entity, const scoped_refptr<::base::rpc::ResultTracker>& result_tracker);
  virtual ~CalculatorServiceIf();
  std::string service_name() const override;
  static std::string static_service_name();

  virtual void Add(const AddRequestPB *req,
     AddResponsePB *resp, ::base::rpc::RpcContext *context) = 0;

};

} // namespace rpct
} // namespace base

#endif
