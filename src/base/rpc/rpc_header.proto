package base.rpc;

import "google/protobuf/descriptor.proto";

extend google.protobuf.FieldOptions {
  optional bool REDACT = 50001 [default=false];
}

message UserInformationPB {
  optional string effective_user = 1;
  required string real_user = 2;
}

message ConnectionContextPB {
  optional UserInformationPB DEPRECATED_user_info = 2;
}

enum RpcFeatureFlag {
  UNKNOWN = 0;
  APPLICATION_FEATURE_FLAGS = 1;
}

message SaslMessagePB {
  enum SaslState {
    UNKNOWN   = 999;
    SUCCESS   = 0;
    NEGOTIATE = 1;
    INITIATE  = 2;
    CHALLENGE = 3;
    RESPONSE  = 4;
  }

  message SaslAuth {
    optional string method    = 1;
    required string mechanism = 2;
    optional bytes challenge  = 5 [(REDACT) = true];
  }

  repeated RpcFeatureFlag supported_features = 1;

  required SaslState state = 2;
  optional bytes token     = 3 [(REDACT) = true];
  repeated SaslAuth auths  = 4;
}

message RemoteMethodPB {
  required string service_name = 1;
  required string method_name  = 2;
}

message RequestIdPB {
  required string client_id              = 1;
  required int64 seq_no                  = 2;
  required int64 first_incomplete_seq_no = 3;
  required int64 attempt_no              = 4;
}

message RequestHeader {
  required int32 call_id = 3;
  optional RemoteMethodPB remote_method = 6;
  optional uint32 timeout_millis = 10;
  repeated uint32 required_feature_flags = 11;
  optional RequestIdPB request_id = 15;
}

message ResponseHeader {
  required int32 call_id          = 1;
  optional bool is_error          = 2 [ default = false ];
  repeated uint32 sidecar_offsets = 3;
}

message ErrorStatusPB {
  enum RpcErrorCodePB {
    FATAL_UNKNOWN = 10;

    ERROR_APPLICATION = 1;

    ERROR_NO_SUCH_METHOD = 2;

    ERROR_NO_SUCH_SERVICE = 3;

    ERROR_SERVER_TOO_BUSY = 4;

    ERROR_INVALID_REQUEST = 5;

    ERROR_REQUEST_STALE = 6;

    FATAL_SERVER_SHUTTING_DOWN = 11;
    FATAL_INVALID_RPC_HEADER = 12;
    FATAL_DESERIALIZING_REQUEST = 13;
    FATAL_VERSION_MISMATCH = 14;
    FATAL_UNAUTHORIZED = 15;
  }

  required string message = 1;
  optional RpcErrorCodePB code = 2;
  repeated uint32 unsupported_feature_flags = 3;
  extensions 100 to max;
}

extend google.protobuf.MethodOptions {
  optional bool track_rpc_result = 50006 [ default = false ];
}
