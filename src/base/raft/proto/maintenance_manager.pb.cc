// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base/raft/proto/maintenance_manager.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "base/raft/proto/maintenance_manager.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace base {

namespace {

const ::google::protobuf::Descriptor* MaintenanceManagerStatusPB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MaintenanceManagerStatusPB_reflection_ = NULL;
const ::google::protobuf::Descriptor* MaintenanceManagerStatusPB_MaintenanceOpPB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MaintenanceManagerStatusPB_MaintenanceOpPB_reflection_ = NULL;
const ::google::protobuf::Descriptor* MaintenanceManagerStatusPB_CompletedOpPB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MaintenanceManagerStatusPB_CompletedOpPB_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_base_2fraft_2fproto_2fmaintenance_5fmanager_2eproto() {
  protobuf_AddDesc_base_2fraft_2fproto_2fmaintenance_5fmanager_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "base/raft/proto/maintenance_manager.proto");
  GOOGLE_CHECK(file != NULL);
  MaintenanceManagerStatusPB_descriptor_ = file->message_type(0);
  static const int MaintenanceManagerStatusPB_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaintenanceManagerStatusPB, best_op_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaintenanceManagerStatusPB, registered_operations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaintenanceManagerStatusPB, completed_operations_),
  };
  MaintenanceManagerStatusPB_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MaintenanceManagerStatusPB_descriptor_,
      MaintenanceManagerStatusPB::default_instance_,
      MaintenanceManagerStatusPB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaintenanceManagerStatusPB, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaintenanceManagerStatusPB, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MaintenanceManagerStatusPB));
  MaintenanceManagerStatusPB_MaintenanceOpPB_descriptor_ = MaintenanceManagerStatusPB_descriptor_->nested_type(0);
  static const int MaintenanceManagerStatusPB_MaintenanceOpPB_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaintenanceManagerStatusPB_MaintenanceOpPB, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaintenanceManagerStatusPB_MaintenanceOpPB, running_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaintenanceManagerStatusPB_MaintenanceOpPB, runnable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaintenanceManagerStatusPB_MaintenanceOpPB, ram_achored_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaintenanceManagerStatusPB_MaintenanceOpPB, logs_retained_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaintenanceManagerStatusPB_MaintenanceOpPB, pref_improvement_),
  };
  MaintenanceManagerStatusPB_MaintenanceOpPB_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MaintenanceManagerStatusPB_MaintenanceOpPB_descriptor_,
      MaintenanceManagerStatusPB_MaintenanceOpPB::default_instance_,
      MaintenanceManagerStatusPB_MaintenanceOpPB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaintenanceManagerStatusPB_MaintenanceOpPB, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaintenanceManagerStatusPB_MaintenanceOpPB, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MaintenanceManagerStatusPB_MaintenanceOpPB));
  MaintenanceManagerStatusPB_CompletedOpPB_descriptor_ = MaintenanceManagerStatusPB_descriptor_->nested_type(1);
  static const int MaintenanceManagerStatusPB_CompletedOpPB_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaintenanceManagerStatusPB_CompletedOpPB, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaintenanceManagerStatusPB_CompletedOpPB, duration_millis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaintenanceManagerStatusPB_CompletedOpPB, secs_since_start_),
  };
  MaintenanceManagerStatusPB_CompletedOpPB_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MaintenanceManagerStatusPB_CompletedOpPB_descriptor_,
      MaintenanceManagerStatusPB_CompletedOpPB::default_instance_,
      MaintenanceManagerStatusPB_CompletedOpPB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaintenanceManagerStatusPB_CompletedOpPB, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaintenanceManagerStatusPB_CompletedOpPB, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MaintenanceManagerStatusPB_CompletedOpPB));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_base_2fraft_2fproto_2fmaintenance_5fmanager_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MaintenanceManagerStatusPB_descriptor_, &MaintenanceManagerStatusPB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MaintenanceManagerStatusPB_MaintenanceOpPB_descriptor_, &MaintenanceManagerStatusPB_MaintenanceOpPB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MaintenanceManagerStatusPB_CompletedOpPB_descriptor_, &MaintenanceManagerStatusPB_CompletedOpPB::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_base_2fraft_2fproto_2fmaintenance_5fmanager_2eproto() {
  delete MaintenanceManagerStatusPB::default_instance_;
  delete MaintenanceManagerStatusPB_reflection_;
  delete MaintenanceManagerStatusPB_MaintenanceOpPB::default_instance_;
  delete MaintenanceManagerStatusPB_MaintenanceOpPB_reflection_;
  delete MaintenanceManagerStatusPB_CompletedOpPB::default_instance_;
  delete MaintenanceManagerStatusPB_CompletedOpPB_reflection_;
}

void protobuf_AddDesc_base_2fraft_2fproto_2fmaintenance_5fmanager_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n)base/raft/proto/maintenance_manager.pr"
    "oto\022\004base\"\347\003\n\032MaintenanceManagerStatusPB"
    "\022A\n\007best_op\030\001 \001(\01320.base.MaintenanceMana"
    "gerStatusPB.MaintenanceOpPB\022O\n\025registere"
    "d_operations\030\002 \003(\01320.base.MaintenanceMan"
    "agerStatusPB.MaintenanceOpPB\022L\n\024complete"
    "d_operations\030\003 \003(\0132..base.MaintenanceMan"
    "agerStatusPB.CompletedOpPB\032\224\001\n\017Maintenan"
    "ceOpPB\022\014\n\004name\030\001 \002(\t\022\017\n\007running\030\002 \002(\r\022\020\n"
    "\010runnable\030\003 \002(\010\022\031\n\021ram_achored_bytes\030\004 \002"
    "(\004\022\033\n\023logs_retained_bytes\030\005 \002(\003\022\030\n\020pref_"
    "improvement\030\006 \002(\001\032P\n\rCompletedOpPB\022\014\n\004na"
    "me\030\001 \002(\t\022\027\n\017duration_millis\030\002 \002(\005\022\030\n\020sec"
    "s_since_start\030\003 \002(\005", 539);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "base/raft/proto/maintenance_manager.proto", &protobuf_RegisterTypes);
  MaintenanceManagerStatusPB::default_instance_ = new MaintenanceManagerStatusPB();
  MaintenanceManagerStatusPB_MaintenanceOpPB::default_instance_ = new MaintenanceManagerStatusPB_MaintenanceOpPB();
  MaintenanceManagerStatusPB_CompletedOpPB::default_instance_ = new MaintenanceManagerStatusPB_CompletedOpPB();
  MaintenanceManagerStatusPB::default_instance_->InitAsDefaultInstance();
  MaintenanceManagerStatusPB_MaintenanceOpPB::default_instance_->InitAsDefaultInstance();
  MaintenanceManagerStatusPB_CompletedOpPB::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_base_2fraft_2fproto_2fmaintenance_5fmanager_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_base_2fraft_2fproto_2fmaintenance_5fmanager_2eproto {
  StaticDescriptorInitializer_base_2fraft_2fproto_2fmaintenance_5fmanager_2eproto() {
    protobuf_AddDesc_base_2fraft_2fproto_2fmaintenance_5fmanager_2eproto();
  }
} static_descriptor_initializer_base_2fraft_2fproto_2fmaintenance_5fmanager_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MaintenanceManagerStatusPB_MaintenanceOpPB::kNameFieldNumber;
const int MaintenanceManagerStatusPB_MaintenanceOpPB::kRunningFieldNumber;
const int MaintenanceManagerStatusPB_MaintenanceOpPB::kRunnableFieldNumber;
const int MaintenanceManagerStatusPB_MaintenanceOpPB::kRamAchoredBytesFieldNumber;
const int MaintenanceManagerStatusPB_MaintenanceOpPB::kLogsRetainedBytesFieldNumber;
const int MaintenanceManagerStatusPB_MaintenanceOpPB::kPrefImprovementFieldNumber;
#endif  // !_MSC_VER

MaintenanceManagerStatusPB_MaintenanceOpPB::MaintenanceManagerStatusPB_MaintenanceOpPB()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:base.MaintenanceManagerStatusPB.MaintenanceOpPB)
}

void MaintenanceManagerStatusPB_MaintenanceOpPB::InitAsDefaultInstance() {
}

MaintenanceManagerStatusPB_MaintenanceOpPB::MaintenanceManagerStatusPB_MaintenanceOpPB(const MaintenanceManagerStatusPB_MaintenanceOpPB& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:base.MaintenanceManagerStatusPB.MaintenanceOpPB)
}

void MaintenanceManagerStatusPB_MaintenanceOpPB::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  running_ = 0u;
  runnable_ = false;
  ram_achored_bytes_ = GOOGLE_ULONGLONG(0);
  logs_retained_bytes_ = GOOGLE_LONGLONG(0);
  pref_improvement_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MaintenanceManagerStatusPB_MaintenanceOpPB::~MaintenanceManagerStatusPB_MaintenanceOpPB() {
  // @@protoc_insertion_point(destructor:base.MaintenanceManagerStatusPB.MaintenanceOpPB)
  SharedDtor();
}

void MaintenanceManagerStatusPB_MaintenanceOpPB::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void MaintenanceManagerStatusPB_MaintenanceOpPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MaintenanceManagerStatusPB_MaintenanceOpPB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MaintenanceManagerStatusPB_MaintenanceOpPB_descriptor_;
}

const MaintenanceManagerStatusPB_MaintenanceOpPB& MaintenanceManagerStatusPB_MaintenanceOpPB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_base_2fraft_2fproto_2fmaintenance_5fmanager_2eproto();
  return *default_instance_;
}

MaintenanceManagerStatusPB_MaintenanceOpPB* MaintenanceManagerStatusPB_MaintenanceOpPB::default_instance_ = NULL;

MaintenanceManagerStatusPB_MaintenanceOpPB* MaintenanceManagerStatusPB_MaintenanceOpPB::New() const {
  return new MaintenanceManagerStatusPB_MaintenanceOpPB;
}

void MaintenanceManagerStatusPB_MaintenanceOpPB::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MaintenanceManagerStatusPB_MaintenanceOpPB*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(running_, pref_improvement_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MaintenanceManagerStatusPB_MaintenanceOpPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:base.MaintenanceManagerStatusPB.MaintenanceOpPB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_running;
        break;
      }

      // required uint32 running = 2;
      case 2: {
        if (tag == 16) {
         parse_running:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &running_)));
          set_has_running();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_runnable;
        break;
      }

      // required bool runnable = 3;
      case 3: {
        if (tag == 24) {
         parse_runnable:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &runnable_)));
          set_has_runnable();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ram_achored_bytes;
        break;
      }

      // required uint64 ram_achored_bytes = 4;
      case 4: {
        if (tag == 32) {
         parse_ram_achored_bytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ram_achored_bytes_)));
          set_has_ram_achored_bytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_logs_retained_bytes;
        break;
      }

      // required int64 logs_retained_bytes = 5;
      case 5: {
        if (tag == 40) {
         parse_logs_retained_bytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &logs_retained_bytes_)));
          set_has_logs_retained_bytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_pref_improvement;
        break;
      }

      // required double pref_improvement = 6;
      case 6: {
        if (tag == 49) {
         parse_pref_improvement:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pref_improvement_)));
          set_has_pref_improvement();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:base.MaintenanceManagerStatusPB.MaintenanceOpPB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:base.MaintenanceManagerStatusPB.MaintenanceOpPB)
  return false;
#undef DO_
}

void MaintenanceManagerStatusPB_MaintenanceOpPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:base.MaintenanceManagerStatusPB.MaintenanceOpPB)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required uint32 running = 2;
  if (has_running()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->running(), output);
  }

  // required bool runnable = 3;
  if (has_runnable()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->runnable(), output);
  }

  // required uint64 ram_achored_bytes = 4;
  if (has_ram_achored_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->ram_achored_bytes(), output);
  }

  // required int64 logs_retained_bytes = 5;
  if (has_logs_retained_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->logs_retained_bytes(), output);
  }

  // required double pref_improvement = 6;
  if (has_pref_improvement()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->pref_improvement(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:base.MaintenanceManagerStatusPB.MaintenanceOpPB)
}

::google::protobuf::uint8* MaintenanceManagerStatusPB_MaintenanceOpPB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:base.MaintenanceManagerStatusPB.MaintenanceOpPB)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required uint32 running = 2;
  if (has_running()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->running(), target);
  }

  // required bool runnable = 3;
  if (has_runnable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->runnable(), target);
  }

  // required uint64 ram_achored_bytes = 4;
  if (has_ram_achored_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->ram_achored_bytes(), target);
  }

  // required int64 logs_retained_bytes = 5;
  if (has_logs_retained_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->logs_retained_bytes(), target);
  }

  // required double pref_improvement = 6;
  if (has_pref_improvement()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->pref_improvement(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:base.MaintenanceManagerStatusPB.MaintenanceOpPB)
  return target;
}

int MaintenanceManagerStatusPB_MaintenanceOpPB::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required uint32 running = 2;
    if (has_running()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->running());
    }

    // required bool runnable = 3;
    if (has_runnable()) {
      total_size += 1 + 1;
    }

    // required uint64 ram_achored_bytes = 4;
    if (has_ram_achored_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ram_achored_bytes());
    }

    // required int64 logs_retained_bytes = 5;
    if (has_logs_retained_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->logs_retained_bytes());
    }

    // required double pref_improvement = 6;
    if (has_pref_improvement()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MaintenanceManagerStatusPB_MaintenanceOpPB::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MaintenanceManagerStatusPB_MaintenanceOpPB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MaintenanceManagerStatusPB_MaintenanceOpPB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MaintenanceManagerStatusPB_MaintenanceOpPB::MergeFrom(const MaintenanceManagerStatusPB_MaintenanceOpPB& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_running()) {
      set_running(from.running());
    }
    if (from.has_runnable()) {
      set_runnable(from.runnable());
    }
    if (from.has_ram_achored_bytes()) {
      set_ram_achored_bytes(from.ram_achored_bytes());
    }
    if (from.has_logs_retained_bytes()) {
      set_logs_retained_bytes(from.logs_retained_bytes());
    }
    if (from.has_pref_improvement()) {
      set_pref_improvement(from.pref_improvement());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MaintenanceManagerStatusPB_MaintenanceOpPB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaintenanceManagerStatusPB_MaintenanceOpPB::CopyFrom(const MaintenanceManagerStatusPB_MaintenanceOpPB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaintenanceManagerStatusPB_MaintenanceOpPB::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void MaintenanceManagerStatusPB_MaintenanceOpPB::Swap(MaintenanceManagerStatusPB_MaintenanceOpPB* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(running_, other->running_);
    std::swap(runnable_, other->runnable_);
    std::swap(ram_achored_bytes_, other->ram_achored_bytes_);
    std::swap(logs_retained_bytes_, other->logs_retained_bytes_);
    std::swap(pref_improvement_, other->pref_improvement_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MaintenanceManagerStatusPB_MaintenanceOpPB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MaintenanceManagerStatusPB_MaintenanceOpPB_descriptor_;
  metadata.reflection = MaintenanceManagerStatusPB_MaintenanceOpPB_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MaintenanceManagerStatusPB_CompletedOpPB::kNameFieldNumber;
const int MaintenanceManagerStatusPB_CompletedOpPB::kDurationMillisFieldNumber;
const int MaintenanceManagerStatusPB_CompletedOpPB::kSecsSinceStartFieldNumber;
#endif  // !_MSC_VER

MaintenanceManagerStatusPB_CompletedOpPB::MaintenanceManagerStatusPB_CompletedOpPB()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:base.MaintenanceManagerStatusPB.CompletedOpPB)
}

void MaintenanceManagerStatusPB_CompletedOpPB::InitAsDefaultInstance() {
}

MaintenanceManagerStatusPB_CompletedOpPB::MaintenanceManagerStatusPB_CompletedOpPB(const MaintenanceManagerStatusPB_CompletedOpPB& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:base.MaintenanceManagerStatusPB.CompletedOpPB)
}

void MaintenanceManagerStatusPB_CompletedOpPB::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_millis_ = 0;
  secs_since_start_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MaintenanceManagerStatusPB_CompletedOpPB::~MaintenanceManagerStatusPB_CompletedOpPB() {
  // @@protoc_insertion_point(destructor:base.MaintenanceManagerStatusPB.CompletedOpPB)
  SharedDtor();
}

void MaintenanceManagerStatusPB_CompletedOpPB::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void MaintenanceManagerStatusPB_CompletedOpPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MaintenanceManagerStatusPB_CompletedOpPB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MaintenanceManagerStatusPB_CompletedOpPB_descriptor_;
}

const MaintenanceManagerStatusPB_CompletedOpPB& MaintenanceManagerStatusPB_CompletedOpPB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_base_2fraft_2fproto_2fmaintenance_5fmanager_2eproto();
  return *default_instance_;
}

MaintenanceManagerStatusPB_CompletedOpPB* MaintenanceManagerStatusPB_CompletedOpPB::default_instance_ = NULL;

MaintenanceManagerStatusPB_CompletedOpPB* MaintenanceManagerStatusPB_CompletedOpPB::New() const {
  return new MaintenanceManagerStatusPB_CompletedOpPB;
}

void MaintenanceManagerStatusPB_CompletedOpPB::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MaintenanceManagerStatusPB_CompletedOpPB*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(duration_millis_, secs_since_start_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MaintenanceManagerStatusPB_CompletedOpPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:base.MaintenanceManagerStatusPB.CompletedOpPB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_duration_millis;
        break;
      }

      // required int32 duration_millis = 2;
      case 2: {
        if (tag == 16) {
         parse_duration_millis:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_millis_)));
          set_has_duration_millis();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_secs_since_start;
        break;
      }

      // required int32 secs_since_start = 3;
      case 3: {
        if (tag == 24) {
         parse_secs_since_start:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &secs_since_start_)));
          set_has_secs_since_start();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:base.MaintenanceManagerStatusPB.CompletedOpPB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:base.MaintenanceManagerStatusPB.CompletedOpPB)
  return false;
#undef DO_
}

void MaintenanceManagerStatusPB_CompletedOpPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:base.MaintenanceManagerStatusPB.CompletedOpPB)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required int32 duration_millis = 2;
  if (has_duration_millis()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->duration_millis(), output);
  }

  // required int32 secs_since_start = 3;
  if (has_secs_since_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->secs_since_start(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:base.MaintenanceManagerStatusPB.CompletedOpPB)
}

::google::protobuf::uint8* MaintenanceManagerStatusPB_CompletedOpPB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:base.MaintenanceManagerStatusPB.CompletedOpPB)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required int32 duration_millis = 2;
  if (has_duration_millis()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->duration_millis(), target);
  }

  // required int32 secs_since_start = 3;
  if (has_secs_since_start()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->secs_since_start(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:base.MaintenanceManagerStatusPB.CompletedOpPB)
  return target;
}

int MaintenanceManagerStatusPB_CompletedOpPB::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required int32 duration_millis = 2;
    if (has_duration_millis()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->duration_millis());
    }

    // required int32 secs_since_start = 3;
    if (has_secs_since_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->secs_since_start());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MaintenanceManagerStatusPB_CompletedOpPB::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MaintenanceManagerStatusPB_CompletedOpPB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MaintenanceManagerStatusPB_CompletedOpPB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MaintenanceManagerStatusPB_CompletedOpPB::MergeFrom(const MaintenanceManagerStatusPB_CompletedOpPB& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_duration_millis()) {
      set_duration_millis(from.duration_millis());
    }
    if (from.has_secs_since_start()) {
      set_secs_since_start(from.secs_since_start());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MaintenanceManagerStatusPB_CompletedOpPB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaintenanceManagerStatusPB_CompletedOpPB::CopyFrom(const MaintenanceManagerStatusPB_CompletedOpPB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaintenanceManagerStatusPB_CompletedOpPB::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void MaintenanceManagerStatusPB_CompletedOpPB::Swap(MaintenanceManagerStatusPB_CompletedOpPB* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(duration_millis_, other->duration_millis_);
    std::swap(secs_since_start_, other->secs_since_start_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MaintenanceManagerStatusPB_CompletedOpPB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MaintenanceManagerStatusPB_CompletedOpPB_descriptor_;
  metadata.reflection = MaintenanceManagerStatusPB_CompletedOpPB_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MaintenanceManagerStatusPB::kBestOpFieldNumber;
const int MaintenanceManagerStatusPB::kRegisteredOperationsFieldNumber;
const int MaintenanceManagerStatusPB::kCompletedOperationsFieldNumber;
#endif  // !_MSC_VER

MaintenanceManagerStatusPB::MaintenanceManagerStatusPB()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:base.MaintenanceManagerStatusPB)
}

void MaintenanceManagerStatusPB::InitAsDefaultInstance() {
  best_op_ = const_cast< ::base::MaintenanceManagerStatusPB_MaintenanceOpPB*>(&::base::MaintenanceManagerStatusPB_MaintenanceOpPB::default_instance());
}

MaintenanceManagerStatusPB::MaintenanceManagerStatusPB(const MaintenanceManagerStatusPB& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:base.MaintenanceManagerStatusPB)
}

void MaintenanceManagerStatusPB::SharedCtor() {
  _cached_size_ = 0;
  best_op_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MaintenanceManagerStatusPB::~MaintenanceManagerStatusPB() {
  // @@protoc_insertion_point(destructor:base.MaintenanceManagerStatusPB)
  SharedDtor();
}

void MaintenanceManagerStatusPB::SharedDtor() {
  if (this != default_instance_) {
    delete best_op_;
  }
}

void MaintenanceManagerStatusPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MaintenanceManagerStatusPB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MaintenanceManagerStatusPB_descriptor_;
}

const MaintenanceManagerStatusPB& MaintenanceManagerStatusPB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_base_2fraft_2fproto_2fmaintenance_5fmanager_2eproto();
  return *default_instance_;
}

MaintenanceManagerStatusPB* MaintenanceManagerStatusPB::default_instance_ = NULL;

MaintenanceManagerStatusPB* MaintenanceManagerStatusPB::New() const {
  return new MaintenanceManagerStatusPB;
}

void MaintenanceManagerStatusPB::Clear() {
  if (has_best_op()) {
    if (best_op_ != NULL) best_op_->::base::MaintenanceManagerStatusPB_MaintenanceOpPB::Clear();
  }
  registered_operations_.Clear();
  completed_operations_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MaintenanceManagerStatusPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:base.MaintenanceManagerStatusPB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .base.MaintenanceManagerStatusPB.MaintenanceOpPB best_op = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_best_op()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_registered_operations;
        break;
      }

      // repeated .base.MaintenanceManagerStatusPB.MaintenanceOpPB registered_operations = 2;
      case 2: {
        if (tag == 18) {
         parse_registered_operations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_registered_operations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_registered_operations;
        if (input->ExpectTag(26)) goto parse_completed_operations;
        break;
      }

      // repeated .base.MaintenanceManagerStatusPB.CompletedOpPB completed_operations = 3;
      case 3: {
        if (tag == 26) {
         parse_completed_operations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_completed_operations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_completed_operations;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:base.MaintenanceManagerStatusPB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:base.MaintenanceManagerStatusPB)
  return false;
#undef DO_
}

void MaintenanceManagerStatusPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:base.MaintenanceManagerStatusPB)
  // optional .base.MaintenanceManagerStatusPB.MaintenanceOpPB best_op = 1;
  if (has_best_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->best_op(), output);
  }

  // repeated .base.MaintenanceManagerStatusPB.MaintenanceOpPB registered_operations = 2;
  for (int i = 0; i < this->registered_operations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->registered_operations(i), output);
  }

  // repeated .base.MaintenanceManagerStatusPB.CompletedOpPB completed_operations = 3;
  for (int i = 0; i < this->completed_operations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->completed_operations(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:base.MaintenanceManagerStatusPB)
}

::google::protobuf::uint8* MaintenanceManagerStatusPB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:base.MaintenanceManagerStatusPB)
  // optional .base.MaintenanceManagerStatusPB.MaintenanceOpPB best_op = 1;
  if (has_best_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->best_op(), target);
  }

  // repeated .base.MaintenanceManagerStatusPB.MaintenanceOpPB registered_operations = 2;
  for (int i = 0; i < this->registered_operations_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->registered_operations(i), target);
  }

  // repeated .base.MaintenanceManagerStatusPB.CompletedOpPB completed_operations = 3;
  for (int i = 0; i < this->completed_operations_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->completed_operations(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:base.MaintenanceManagerStatusPB)
  return target;
}

int MaintenanceManagerStatusPB::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .base.MaintenanceManagerStatusPB.MaintenanceOpPB best_op = 1;
    if (has_best_op()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->best_op());
    }

  }
  // repeated .base.MaintenanceManagerStatusPB.MaintenanceOpPB registered_operations = 2;
  total_size += 1 * this->registered_operations_size();
  for (int i = 0; i < this->registered_operations_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->registered_operations(i));
  }

  // repeated .base.MaintenanceManagerStatusPB.CompletedOpPB completed_operations = 3;
  total_size += 1 * this->completed_operations_size();
  for (int i = 0; i < this->completed_operations_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->completed_operations(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MaintenanceManagerStatusPB::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MaintenanceManagerStatusPB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MaintenanceManagerStatusPB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MaintenanceManagerStatusPB::MergeFrom(const MaintenanceManagerStatusPB& from) {
  GOOGLE_CHECK_NE(&from, this);
  registered_operations_.MergeFrom(from.registered_operations_);
  completed_operations_.MergeFrom(from.completed_operations_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_best_op()) {
      mutable_best_op()->::base::MaintenanceManagerStatusPB_MaintenanceOpPB::MergeFrom(from.best_op());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MaintenanceManagerStatusPB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaintenanceManagerStatusPB::CopyFrom(const MaintenanceManagerStatusPB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaintenanceManagerStatusPB::IsInitialized() const {

  if (has_best_op()) {
    if (!this->best_op().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->registered_operations())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->completed_operations())) return false;
  return true;
}

void MaintenanceManagerStatusPB::Swap(MaintenanceManagerStatusPB* other) {
  if (other != this) {
    std::swap(best_op_, other->best_op_);
    registered_operations_.Swap(&other->registered_operations_);
    completed_operations_.Swap(&other->completed_operations_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MaintenanceManagerStatusPB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MaintenanceManagerStatusPB_descriptor_;
  metadata.reflection = MaintenanceManagerStatusPB_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace base

// @@protoc_insertion_point(global_scope)
