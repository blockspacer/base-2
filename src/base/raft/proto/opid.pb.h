// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base/raft/proto/opid.proto

#ifndef PROTOBUF_base_2fraft_2fproto_2fopid_2eproto__INCLUDED
#define PROTOBUF_base_2fraft_2fproto_2fopid_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace base {
namespace consensus {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_base_2fraft_2fproto_2fopid_2eproto();
void protobuf_AssignDesc_base_2fraft_2fproto_2fopid_2eproto();
void protobuf_ShutdownFile_base_2fraft_2fproto_2fopid_2eproto();

class OpId;

// ===================================================================

class OpId : public ::google::protobuf::Message {
 public:
  OpId();
  virtual ~OpId();

  OpId(const OpId& from);

  inline OpId& operator=(const OpId& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpId& default_instance();

  void Swap(OpId* other);

  // implements Message ----------------------------------------------

  OpId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpId& from);
  void MergeFrom(const OpId& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 term = 1;
  inline bool has_term() const;
  inline void clear_term();
  static const int kTermFieldNumber = 1;
  inline ::google::protobuf::int64 term() const;
  inline void set_term(::google::protobuf::int64 value);

  // required int64 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int64 index() const;
  inline void set_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:base.consensus.OpId)
 private:
  inline void set_has_term();
  inline void clear_has_term();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 term_;
  ::google::protobuf::int64 index_;
  friend void  protobuf_AddDesc_base_2fraft_2fproto_2fopid_2eproto();
  friend void protobuf_AssignDesc_base_2fraft_2fproto_2fopid_2eproto();
  friend void protobuf_ShutdownFile_base_2fraft_2fproto_2fopid_2eproto();

  void InitAsDefaultInstance();
  static OpId* default_instance_;
};
// ===================================================================


// ===================================================================

// OpId

// required int64 term = 1;
inline bool OpId::has_term() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpId::set_has_term() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpId::clear_has_term() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpId::clear_term() {
  term_ = GOOGLE_LONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::int64 OpId::term() const {
  // @@protoc_insertion_point(field_get:base.consensus.OpId.term)
  return term_;
}
inline void OpId::set_term(::google::protobuf::int64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:base.consensus.OpId.term)
}

// required int64 index = 2;
inline bool OpId::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OpId::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OpId::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OpId::clear_index() {
  index_ = GOOGLE_LONGLONG(0);
  clear_has_index();
}
inline ::google::protobuf::int64 OpId::index() const {
  // @@protoc_insertion_point(field_get:base.consensus.OpId.index)
  return index_;
}
inline void OpId::set_index(::google::protobuf::int64 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:base.consensus.OpId.index)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace consensus
}  // namespace base

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_base_2fraft_2fproto_2fopid_2eproto__INCLUDED
