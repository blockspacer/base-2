// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base/common/wire_protocol.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "base/common/wire_protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace base {

namespace {

const ::google::protobuf::Descriptor* AppStatusPB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppStatusPB_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* AppStatusPB_ErrorCode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* NodeInstancePB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeInstancePB_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerRegistrationPB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerRegistrationPB_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerEntryPB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerEntryPB_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_base_2fcommon_2fwire_5fprotocol_2eproto() {
  protobuf_AddDesc_base_2fcommon_2fwire_5fprotocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "base/common/wire_protocol.proto");
  GOOGLE_CHECK(file != NULL);
  AppStatusPB_descriptor_ = file->message_type(0);
  static const int AppStatusPB_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppStatusPB, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppStatusPB, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppStatusPB, posix_code_),
  };
  AppStatusPB_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AppStatusPB_descriptor_,
      AppStatusPB::default_instance_,
      AppStatusPB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppStatusPB, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppStatusPB, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AppStatusPB));
  AppStatusPB_ErrorCode_descriptor_ = AppStatusPB_descriptor_->enum_type(0);
  NodeInstancePB_descriptor_ = file->message_type(1);
  static const int NodeInstancePB_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInstancePB, permanent_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInstancePB, instance_seqno_),
  };
  NodeInstancePB_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NodeInstancePB_descriptor_,
      NodeInstancePB::default_instance_,
      NodeInstancePB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInstancePB, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInstancePB, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NodeInstancePB));
  ServerRegistrationPB_descriptor_ = file->message_type(2);
  static const int ServerRegistrationPB_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRegistrationPB, rpc_addresses_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRegistrationPB, http_addresses_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRegistrationPB, software_version_),
  };
  ServerRegistrationPB_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServerRegistrationPB_descriptor_,
      ServerRegistrationPB::default_instance_,
      ServerRegistrationPB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRegistrationPB, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRegistrationPB, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServerRegistrationPB));
  ServerEntryPB_descriptor_ = file->message_type(3);
  static const int ServerEntryPB_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerEntryPB, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerEntryPB, instance_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerEntryPB, registration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerEntryPB, role_),
  };
  ServerEntryPB_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServerEntryPB_descriptor_,
      ServerEntryPB::default_instance_,
      ServerEntryPB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerEntryPB, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerEntryPB, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServerEntryPB));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_base_2fcommon_2fwire_5fprotocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AppStatusPB_descriptor_, &AppStatusPB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NodeInstancePB_descriptor_, &NodeInstancePB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServerRegistrationPB_descriptor_, &ServerRegistrationPB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServerEntryPB_descriptor_, &ServerEntryPB::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_base_2fcommon_2fwire_5fprotocol_2eproto() {
  delete AppStatusPB::default_instance_;
  delete AppStatusPB_reflection_;
  delete NodeInstancePB::default_instance_;
  delete NodeInstancePB_reflection_;
  delete ServerRegistrationPB::default_instance_;
  delete ServerRegistrationPB_reflection_;
  delete ServerEntryPB::default_instance_;
  delete ServerEntryPB_reflection_;
}

void protobuf_AddDesc_base_2fcommon_2fwire_5fprotocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::base::protobuf_AddDesc_base_2fcommon_2fcommon_2eproto();
  ::base::consensus::protobuf_AddDesc_base_2fraft_2fproto_2fmetadata_2eproto();
  ::base::protobuf_AddDesc_base_2futil_2fpb_5futil_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\037base/common/wire_protocol.proto\022\004base\032"
    "\030base/common/common.proto\032\036base/raft/pro"
    "to/metadata.proto\032\027base/util/pb_util.pro"
    "to\"\323\003\n\013AppStatusPB\022)\n\004code\030\001 \002(\0162\033.base."
    "AppStatusPB.ErrorCode\022\017\n\007message\030\002 \001(\t\022\022"
    "\n\nposix_code\030\004 \001(\005\"\363\002\n\tErrorCode\022\022\n\rUNKN"
    "OWN_ERROR\020\347\007\022\006\n\002OK\020\000\022\r\n\tNOT_FOUND\020\001\022\016\n\nC"
    "ORRUPTION\020\002\022\021\n\rNOT_SUPPORTED\020\003\022\024\n\020INVALI"
    "D_ARGUMENT\020\004\022\014\n\010IO_ERROR\020\005\022\023\n\017ALREADY_PR"
    "ESENT\020\006\022\021\n\rRUNTIME_ERROR\020\007\022\021\n\rNETWORK_ER"
    "ROR\020\010\022\021\n\rILLEGAL_STATE\020\t\022\022\n\016NOT_AUTHORIZ"
    "ED\020\n\022\013\n\007ABORTED\020\013\022\020\n\014REMOTE_ERROR\020\014\022\027\n\023S"
    "ERVICE_UNAVAILABLE\020\r\022\r\n\tTIMED_OUT\020\016\022\021\n\rU"
    "NINITIALIZED\020\017\022\027\n\023CONFIGURATION_ERROR\020\020\022"
    "\016\n\nINCOMPLETE\020\021\022\017\n\013END_OF_FILE\020\022\"@\n\016Node"
    "InstancePB\022\026\n\016permanent_uuid\030\001 \002(\014\022\026\n\016in"
    "stance_seqno\030\002 \002(\003\"\203\001\n\024ServerRegistratio"
    "nPB\022\'\n\rrpc_addresses\030\001 \003(\0132\020.base.HostPo"
    "rtPB\022(\n\016http_addresses\030\002 \003(\0132\020.base.Host"
    "PortPB\022\030\n\020software_version\030\003 \001(\t\"\275\001\n\rSer"
    "verEntryPB\022 \n\005error\030\001 \001(\0132\021.base.AppStat"
    "usPB\022)\n\013instance_id\030\002 \001(\0132\024.base.NodeIns"
    "tancePB\0220\n\014registration\030\003 \001(\0132\032.base.Ser"
    "verRegistrationPB\022-\n\004role\030\004 \001(\0162\037.base.c"
    "onsensus.RaftPeerPB.Role", 984);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "base/common/wire_protocol.proto", &protobuf_RegisterTypes);
  AppStatusPB::default_instance_ = new AppStatusPB();
  NodeInstancePB::default_instance_ = new NodeInstancePB();
  ServerRegistrationPB::default_instance_ = new ServerRegistrationPB();
  ServerEntryPB::default_instance_ = new ServerEntryPB();
  AppStatusPB::default_instance_->InitAsDefaultInstance();
  NodeInstancePB::default_instance_->InitAsDefaultInstance();
  ServerRegistrationPB::default_instance_->InitAsDefaultInstance();
  ServerEntryPB::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_base_2fcommon_2fwire_5fprotocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_base_2fcommon_2fwire_5fprotocol_2eproto {
  StaticDescriptorInitializer_base_2fcommon_2fwire_5fprotocol_2eproto() {
    protobuf_AddDesc_base_2fcommon_2fwire_5fprotocol_2eproto();
  }
} static_descriptor_initializer_base_2fcommon_2fwire_5fprotocol_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* AppStatusPB_ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppStatusPB_ErrorCode_descriptor_;
}
bool AppStatusPB_ErrorCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 999:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const AppStatusPB_ErrorCode AppStatusPB::UNKNOWN_ERROR;
const AppStatusPB_ErrorCode AppStatusPB::OK;
const AppStatusPB_ErrorCode AppStatusPB::NOT_FOUND;
const AppStatusPB_ErrorCode AppStatusPB::CORRUPTION;
const AppStatusPB_ErrorCode AppStatusPB::NOT_SUPPORTED;
const AppStatusPB_ErrorCode AppStatusPB::INVALID_ARGUMENT;
const AppStatusPB_ErrorCode AppStatusPB::IO_ERROR;
const AppStatusPB_ErrorCode AppStatusPB::ALREADY_PRESENT;
const AppStatusPB_ErrorCode AppStatusPB::RUNTIME_ERROR;
const AppStatusPB_ErrorCode AppStatusPB::NETWORK_ERROR;
const AppStatusPB_ErrorCode AppStatusPB::ILLEGAL_STATE;
const AppStatusPB_ErrorCode AppStatusPB::NOT_AUTHORIZED;
const AppStatusPB_ErrorCode AppStatusPB::ABORTED;
const AppStatusPB_ErrorCode AppStatusPB::REMOTE_ERROR;
const AppStatusPB_ErrorCode AppStatusPB::SERVICE_UNAVAILABLE;
const AppStatusPB_ErrorCode AppStatusPB::TIMED_OUT;
const AppStatusPB_ErrorCode AppStatusPB::UNINITIALIZED;
const AppStatusPB_ErrorCode AppStatusPB::CONFIGURATION_ERROR;
const AppStatusPB_ErrorCode AppStatusPB::INCOMPLETE;
const AppStatusPB_ErrorCode AppStatusPB::END_OF_FILE;
const AppStatusPB_ErrorCode AppStatusPB::ErrorCode_MIN;
const AppStatusPB_ErrorCode AppStatusPB::ErrorCode_MAX;
const int AppStatusPB::ErrorCode_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int AppStatusPB::kCodeFieldNumber;
const int AppStatusPB::kMessageFieldNumber;
const int AppStatusPB::kPosixCodeFieldNumber;
#endif  // !_MSC_VER

AppStatusPB::AppStatusPB()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:base.AppStatusPB)
}

void AppStatusPB::InitAsDefaultInstance() {
}

AppStatusPB::AppStatusPB(const AppStatusPB& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:base.AppStatusPB)
}

void AppStatusPB::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  code_ = 999;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  posix_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppStatusPB::~AppStatusPB() {
  // @@protoc_insertion_point(destructor:base.AppStatusPB)
  SharedDtor();
}

void AppStatusPB::SharedDtor() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

void AppStatusPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppStatusPB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppStatusPB_descriptor_;
}

const AppStatusPB& AppStatusPB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_base_2fcommon_2fwire_5fprotocol_2eproto();
  return *default_instance_;
}

AppStatusPB* AppStatusPB::default_instance_ = NULL;

AppStatusPB* AppStatusPB::New() const {
  return new AppStatusPB;
}

void AppStatusPB::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    code_ = 999;
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        message_->clear();
      }
    }
    posix_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AppStatusPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:base.AppStatusPB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .base.AppStatusPB.ErrorCode code = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::base::AppStatusPB_ErrorCode_IsValid(value)) {
            set_code(static_cast< ::base::AppStatusPB_ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }

      // optional string message = 2;
      case 2: {
        if (tag == 18) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_posix_code;
        break;
      }

      // optional int32 posix_code = 4;
      case 4: {
        if (tag == 32) {
         parse_posix_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posix_code_)));
          set_has_posix_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:base.AppStatusPB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:base.AppStatusPB)
  return false;
#undef DO_
}

void AppStatusPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:base.AppStatusPB)
  // required .base.AppStatusPB.ErrorCode code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // optional int32 posix_code = 4;
  if (has_posix_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->posix_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:base.AppStatusPB)
}

::google::protobuf::uint8* AppStatusPB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:base.AppStatusPB)
  // required .base.AppStatusPB.ErrorCode code = 1;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // optional int32 posix_code = 4;
  if (has_posix_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->posix_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:base.AppStatusPB)
  return target;
}

int AppStatusPB::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .base.AppStatusPB.ErrorCode code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
    }

    // optional string message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional int32 posix_code = 4;
    if (has_posix_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posix_code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppStatusPB::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AppStatusPB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AppStatusPB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AppStatusPB::MergeFrom(const AppStatusPB& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
    if (from.has_posix_code()) {
      set_posix_code(from.posix_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AppStatusPB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppStatusPB::CopyFrom(const AppStatusPB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppStatusPB::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AppStatusPB::Swap(AppStatusPB* other) {
  if (other != this) {
    std::swap(code_, other->code_);
    std::swap(message_, other->message_);
    std::swap(posix_code_, other->posix_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AppStatusPB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppStatusPB_descriptor_;
  metadata.reflection = AppStatusPB_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NodeInstancePB::kPermanentUuidFieldNumber;
const int NodeInstancePB::kInstanceSeqnoFieldNumber;
#endif  // !_MSC_VER

NodeInstancePB::NodeInstancePB()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:base.NodeInstancePB)
}

void NodeInstancePB::InitAsDefaultInstance() {
}

NodeInstancePB::NodeInstancePB(const NodeInstancePB& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:base.NodeInstancePB)
}

void NodeInstancePB::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  permanent_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_seqno_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NodeInstancePB::~NodeInstancePB() {
  // @@protoc_insertion_point(destructor:base.NodeInstancePB)
  SharedDtor();
}

void NodeInstancePB::SharedDtor() {
  if (permanent_uuid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete permanent_uuid_;
  }
  if (this != default_instance_) {
  }
}

void NodeInstancePB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeInstancePB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeInstancePB_descriptor_;
}

const NodeInstancePB& NodeInstancePB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_base_2fcommon_2fwire_5fprotocol_2eproto();
  return *default_instance_;
}

NodeInstancePB* NodeInstancePB::default_instance_ = NULL;

NodeInstancePB* NodeInstancePB::New() const {
  return new NodeInstancePB;
}

void NodeInstancePB::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_permanent_uuid()) {
      if (permanent_uuid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        permanent_uuid_->clear();
      }
    }
    instance_seqno_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NodeInstancePB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:base.NodeInstancePB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes permanent_uuid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_permanent_uuid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_instance_seqno;
        break;
      }

      // required int64 instance_seqno = 2;
      case 2: {
        if (tag == 16) {
         parse_instance_seqno:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &instance_seqno_)));
          set_has_instance_seqno();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:base.NodeInstancePB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:base.NodeInstancePB)
  return false;
#undef DO_
}

void NodeInstancePB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:base.NodeInstancePB)
  // required bytes permanent_uuid = 1;
  if (has_permanent_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->permanent_uuid(), output);
  }

  // required int64 instance_seqno = 2;
  if (has_instance_seqno()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->instance_seqno(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:base.NodeInstancePB)
}

::google::protobuf::uint8* NodeInstancePB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:base.NodeInstancePB)
  // required bytes permanent_uuid = 1;
  if (has_permanent_uuid()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->permanent_uuid(), target);
  }

  // required int64 instance_seqno = 2;
  if (has_instance_seqno()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->instance_seqno(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:base.NodeInstancePB)
  return target;
}

int NodeInstancePB::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes permanent_uuid = 1;
    if (has_permanent_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->permanent_uuid());
    }

    // required int64 instance_seqno = 2;
    if (has_instance_seqno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->instance_seqno());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeInstancePB::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NodeInstancePB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NodeInstancePB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NodeInstancePB::MergeFrom(const NodeInstancePB& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_permanent_uuid()) {
      set_permanent_uuid(from.permanent_uuid());
    }
    if (from.has_instance_seqno()) {
      set_instance_seqno(from.instance_seqno());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NodeInstancePB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeInstancePB::CopyFrom(const NodeInstancePB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeInstancePB::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void NodeInstancePB::Swap(NodeInstancePB* other) {
  if (other != this) {
    std::swap(permanent_uuid_, other->permanent_uuid_);
    std::swap(instance_seqno_, other->instance_seqno_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NodeInstancePB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeInstancePB_descriptor_;
  metadata.reflection = NodeInstancePB_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServerRegistrationPB::kRpcAddressesFieldNumber;
const int ServerRegistrationPB::kHttpAddressesFieldNumber;
const int ServerRegistrationPB::kSoftwareVersionFieldNumber;
#endif  // !_MSC_VER

ServerRegistrationPB::ServerRegistrationPB()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:base.ServerRegistrationPB)
}

void ServerRegistrationPB::InitAsDefaultInstance() {
}

ServerRegistrationPB::ServerRegistrationPB(const ServerRegistrationPB& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:base.ServerRegistrationPB)
}

void ServerRegistrationPB::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  software_version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerRegistrationPB::~ServerRegistrationPB() {
  // @@protoc_insertion_point(destructor:base.ServerRegistrationPB)
  SharedDtor();
}

void ServerRegistrationPB::SharedDtor() {
  if (software_version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete software_version_;
  }
  if (this != default_instance_) {
  }
}

void ServerRegistrationPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerRegistrationPB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerRegistrationPB_descriptor_;
}

const ServerRegistrationPB& ServerRegistrationPB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_base_2fcommon_2fwire_5fprotocol_2eproto();
  return *default_instance_;
}

ServerRegistrationPB* ServerRegistrationPB::default_instance_ = NULL;

ServerRegistrationPB* ServerRegistrationPB::New() const {
  return new ServerRegistrationPB;
}

void ServerRegistrationPB::Clear() {
  if (has_software_version()) {
    if (software_version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      software_version_->clear();
    }
  }
  rpc_addresses_.Clear();
  http_addresses_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServerRegistrationPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:base.ServerRegistrationPB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .base.HostPortPB rpc_addresses = 1;
      case 1: {
        if (tag == 10) {
         parse_rpc_addresses:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rpc_addresses()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_rpc_addresses;
        if (input->ExpectTag(18)) goto parse_http_addresses;
        break;
      }

      // repeated .base.HostPortPB http_addresses = 2;
      case 2: {
        if (tag == 18) {
         parse_http_addresses:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_http_addresses()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_http_addresses;
        if (input->ExpectTag(26)) goto parse_software_version;
        break;
      }

      // optional string software_version = 3;
      case 3: {
        if (tag == 26) {
         parse_software_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_software_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->software_version().data(), this->software_version().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "software_version");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:base.ServerRegistrationPB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:base.ServerRegistrationPB)
  return false;
#undef DO_
}

void ServerRegistrationPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:base.ServerRegistrationPB)
  // repeated .base.HostPortPB rpc_addresses = 1;
  for (int i = 0; i < this->rpc_addresses_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rpc_addresses(i), output);
  }

  // repeated .base.HostPortPB http_addresses = 2;
  for (int i = 0; i < this->http_addresses_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->http_addresses(i), output);
  }

  // optional string software_version = 3;
  if (has_software_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->software_version().data(), this->software_version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "software_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->software_version(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:base.ServerRegistrationPB)
}

::google::protobuf::uint8* ServerRegistrationPB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:base.ServerRegistrationPB)
  // repeated .base.HostPortPB rpc_addresses = 1;
  for (int i = 0; i < this->rpc_addresses_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rpc_addresses(i), target);
  }

  // repeated .base.HostPortPB http_addresses = 2;
  for (int i = 0; i < this->http_addresses_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->http_addresses(i), target);
  }

  // optional string software_version = 3;
  if (has_software_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->software_version().data(), this->software_version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "software_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->software_version(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:base.ServerRegistrationPB)
  return target;
}

int ServerRegistrationPB::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional string software_version = 3;
    if (has_software_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->software_version());
    }

  }
  // repeated .base.HostPortPB rpc_addresses = 1;
  total_size += 1 * this->rpc_addresses_size();
  for (int i = 0; i < this->rpc_addresses_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rpc_addresses(i));
  }

  // repeated .base.HostPortPB http_addresses = 2;
  total_size += 1 * this->http_addresses_size();
  for (int i = 0; i < this->http_addresses_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->http_addresses(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerRegistrationPB::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServerRegistrationPB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServerRegistrationPB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerRegistrationPB::MergeFrom(const ServerRegistrationPB& from) {
  GOOGLE_CHECK_NE(&from, this);
  rpc_addresses_.MergeFrom(from.rpc_addresses_);
  http_addresses_.MergeFrom(from.http_addresses_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_software_version()) {
      set_software_version(from.software_version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServerRegistrationPB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRegistrationPB::CopyFrom(const ServerRegistrationPB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRegistrationPB::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rpc_addresses())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->http_addresses())) return false;
  return true;
}

void ServerRegistrationPB::Swap(ServerRegistrationPB* other) {
  if (other != this) {
    rpc_addresses_.Swap(&other->rpc_addresses_);
    http_addresses_.Swap(&other->http_addresses_);
    std::swap(software_version_, other->software_version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ServerRegistrationPB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerRegistrationPB_descriptor_;
  metadata.reflection = ServerRegistrationPB_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServerEntryPB::kErrorFieldNumber;
const int ServerEntryPB::kInstanceIdFieldNumber;
const int ServerEntryPB::kRegistrationFieldNumber;
const int ServerEntryPB::kRoleFieldNumber;
#endif  // !_MSC_VER

ServerEntryPB::ServerEntryPB()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:base.ServerEntryPB)
}

void ServerEntryPB::InitAsDefaultInstance() {
  error_ = const_cast< ::base::AppStatusPB*>(&::base::AppStatusPB::default_instance());
  instance_id_ = const_cast< ::base::NodeInstancePB*>(&::base::NodeInstancePB::default_instance());
  registration_ = const_cast< ::base::ServerRegistrationPB*>(&::base::ServerRegistrationPB::default_instance());
}

ServerEntryPB::ServerEntryPB(const ServerEntryPB& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:base.ServerEntryPB)
}

void ServerEntryPB::SharedCtor() {
  _cached_size_ = 0;
  error_ = NULL;
  instance_id_ = NULL;
  registration_ = NULL;
  role_ = 999;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerEntryPB::~ServerEntryPB() {
  // @@protoc_insertion_point(destructor:base.ServerEntryPB)
  SharedDtor();
}

void ServerEntryPB::SharedDtor() {
  if (this != default_instance_) {
    delete error_;
    delete instance_id_;
    delete registration_;
  }
}

void ServerEntryPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerEntryPB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerEntryPB_descriptor_;
}

const ServerEntryPB& ServerEntryPB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_base_2fcommon_2fwire_5fprotocol_2eproto();
  return *default_instance_;
}

ServerEntryPB* ServerEntryPB::default_instance_ = NULL;

ServerEntryPB* ServerEntryPB::New() const {
  return new ServerEntryPB;
}

void ServerEntryPB::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_error()) {
      if (error_ != NULL) error_->::base::AppStatusPB::Clear();
    }
    if (has_instance_id()) {
      if (instance_id_ != NULL) instance_id_->::base::NodeInstancePB::Clear();
    }
    if (has_registration()) {
      if (registration_ != NULL) registration_->::base::ServerRegistrationPB::Clear();
    }
    role_ = 999;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServerEntryPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:base.ServerEntryPB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .base.AppStatusPB error = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_instance_id;
        break;
      }

      // optional .base.NodeInstancePB instance_id = 2;
      case 2: {
        if (tag == 18) {
         parse_instance_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_instance_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_registration;
        break;
      }

      // optional .base.ServerRegistrationPB registration = 3;
      case 3: {
        if (tag == 26) {
         parse_registration:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_registration()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_role;
        break;
      }

      // optional .base.consensus.RaftPeerPB.Role role = 4;
      case 4: {
        if (tag == 32) {
         parse_role:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::base::consensus::RaftPeerPB_Role_IsValid(value)) {
            set_role(static_cast< ::base::consensus::RaftPeerPB_Role >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:base.ServerEntryPB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:base.ServerEntryPB)
  return false;
#undef DO_
}

void ServerEntryPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:base.ServerEntryPB)
  // optional .base.AppStatusPB error = 1;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->error(), output);
  }

  // optional .base.NodeInstancePB instance_id = 2;
  if (has_instance_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->instance_id(), output);
  }

  // optional .base.ServerRegistrationPB registration = 3;
  if (has_registration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->registration(), output);
  }

  // optional .base.consensus.RaftPeerPB.Role role = 4;
  if (has_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->role(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:base.ServerEntryPB)
}

::google::protobuf::uint8* ServerEntryPB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:base.ServerEntryPB)
  // optional .base.AppStatusPB error = 1;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->error(), target);
  }

  // optional .base.NodeInstancePB instance_id = 2;
  if (has_instance_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->instance_id(), target);
  }

  // optional .base.ServerRegistrationPB registration = 3;
  if (has_registration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->registration(), target);
  }

  // optional .base.consensus.RaftPeerPB.Role role = 4;
  if (has_role()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->role(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:base.ServerEntryPB)
  return target;
}

int ServerEntryPB::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .base.AppStatusPB error = 1;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->error());
    }

    // optional .base.NodeInstancePB instance_id = 2;
    if (has_instance_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->instance_id());
    }

    // optional .base.ServerRegistrationPB registration = 3;
    if (has_registration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->registration());
    }

    // optional .base.consensus.RaftPeerPB.Role role = 4;
    if (has_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->role());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerEntryPB::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServerEntryPB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServerEntryPB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerEntryPB::MergeFrom(const ServerEntryPB& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error()) {
      mutable_error()->::base::AppStatusPB::MergeFrom(from.error());
    }
    if (from.has_instance_id()) {
      mutable_instance_id()->::base::NodeInstancePB::MergeFrom(from.instance_id());
    }
    if (from.has_registration()) {
      mutable_registration()->::base::ServerRegistrationPB::MergeFrom(from.registration());
    }
    if (from.has_role()) {
      set_role(from.role());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServerEntryPB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerEntryPB::CopyFrom(const ServerEntryPB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerEntryPB::IsInitialized() const {

  if (has_error()) {
    if (!this->error().IsInitialized()) return false;
  }
  if (has_instance_id()) {
    if (!this->instance_id().IsInitialized()) return false;
  }
  if (has_registration()) {
    if (!this->registration().IsInitialized()) return false;
  }
  return true;
}

void ServerEntryPB::Swap(ServerEntryPB* other) {
  if (other != this) {
    std::swap(error_, other->error_);
    std::swap(instance_id_, other->instance_id_);
    std::swap(registration_, other->registration_);
    std::swap(role_, other->role_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ServerEntryPB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerEntryPB_descriptor_;
  metadata.reflection = ServerEntryPB_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace base

// @@protoc_insertion_point(global_scope)
